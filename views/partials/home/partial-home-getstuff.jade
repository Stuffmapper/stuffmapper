#get-stuff-container
	div(ui-view)
	#loading-get-stuff.noselect.loading-screen.animate-250
		.spinner
			.double-bounce1
			.double-bounce2
		.noselect.loading-text Finding Stuff...
	.search-stuff-container(style="height:74px;background-color:white;padding:7px 20px;")
		i#map-toggle-switch.fa.fa-map.stuff-button.toggle-stuff.sm-button.sm-button-default.sm-button-ghost(ng-click="toggleMap()" style="border-width: 1px;")
		sm-input-group-button#search-stuff(placeholder="search & filter" submit="search()")
	#get-stuff-back-button-container.sm-hidden.animate-250
		i.get-stuff-back-button.fa.fa-arrow-left.sm-hidden.animate-250(ng-click="setGetStuff()")
		#get-stuff-item-title.sm-text-m.sm-hidden.animate-250
	ion-content#masonry-container.animate-250.hide-masonry-container
		//- if ionic
		//- 	ion-refresher(pulling-text="Pull to refresh..." on-refresh="refresh()")
		ul.masonry-grid
			li.masonry-grid-item(ng-repeat="list in listItems | filter:searchStuff:strict" repeat-done="initMasonry(); getDistance()")
				a(ui-sref="stuff.get.item({id:{{ list.id }}})")
					| {{ item.title }}
					.list-item-img-container(id="post-item-{{ list.id }}")
						img(ng-attr-src="https://cdn.stuffmapper.com{{ list.image_url }}")
						.get-stuff-item-info
							.noselect(style="font-size: 16px;") {{ list.title }}
							.noselect(style="font-size: 12px;") {{ ( (list.description.length>50) ? shorten(list.description):(list.description)) }}
						.stuff-item-category-distance-owner(style="left: 7px;") {{ list.category }}
						//- .stuff-item-category-distance-owner.number(style="right: 7px;") {{ list.milesAway }} mi.
	#filter-container.filter-container.sm-tab-container
		.filter-content-container.sm-hidden.animate-250
			.sm-text-m.sm-full-width.noselect Filters
			#clear-filters-button.sm-text-m.sm-full-width.clear-filters(ng-click="clearAll(); showDistance()")
				span.fa.fa-times
				span.noselect clear filters
			#distance-from-me.sm-text-m.sm-full-width
				p.noselect Distance from me
					span
						label#rangeText
				input#rangeInput.distance-slider(type="range", name="rangeInput", step="1", value="20", min="0", max="20")
			//- #newlisting
			//- 	p New listing
			//- 	.filter-label
			//- 		input#newlisting-show(type="checkbox", name="newlisting-show", value="newlisting-show")
			//- 		label(for="newlisting-show") 
			//- 				i.fa.fa-check
			//- 			span only show new listings
			#item-status.sm-text-m.sm-full-width
				p.noselect Item status
				.filter
					.filter-label
						input#item-status-unattended.item-status-checkbox(type="checkbox", name="item-status-unattended", value="item-status-unattended" checked)
						label(for="item-status-unattended") 
							span.noselect unattended
					.filter-label
						input#item-status-contact.item-status-checkbox(type="checkbox", name="item-status-contact", value="item-status-contact" checked)
						label(for="item-status-contact") 
							span.noselect contact for pickup
			#categories.sm-text-m.sm-full-width
				p.noselect Categories
				.select-deselect
						#select-all.select-option(ng-click="selectAll()") 
							span.fa.fa-check.animate-250
							span.noselect select all
						#deselect-all.deselect-option(ng-click="deselectAll()") 
							span.fa.fa-times.animate-250
							span.noselect deselect all
				.filter
					- each category in ['general', 'arts & crafts', 'books, games, & media', 'building & garden materials', 'clothing & accessories', 'electronics', 'furniture & household', 'kid & baby items', 'sporting goods']
						.filter-label
							input.category-input(id="#{category.replace(' ','-')}" ng-click="clearSelectDeselect()", type="checkbox", name="#{category.replace(' ','-')}", value="#{category.replace(' ','-')}" checked)
							label(for="#{category.replace(' ','-')}") 
								span.noselect #{category}
		.sm-background-semi-opaque.sm-background-dark.sm-hidden.animate-250(ng-click="hideFilter()")
